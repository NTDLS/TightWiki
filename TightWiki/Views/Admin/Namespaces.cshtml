@model TightWiki.Models.ViewModels.Admin.NamespacesViewModel
@using TightWiki.Library
@using TightWiki.Models
@inject IViewLocalizer Localizer
@{
    Layout = "/Views/Shared/_Layout.cshtml";
    var sessionState = ViewData["SessionState"] as TightWiki.SessionState ?? throw new Exception("Wiki State Context cannot be null.");
}

<h3>
    @Localizer["Namespaces"]
</h3>

<p>
    @Localizer["All namespaces contained in the wiki."]<br /><br />
</p>

@if (Model.Namespaces.Count > 0)
{
    @Html.Raw(TightWiki.Library.PageSelectorGenerator.Generate(Context.Request.QueryString, Model.PaginationPageCount))
    <br />

    <table class="table fixedTable100 table-striped" border="0" cellspacing="0" cellpadding="0">
        <thead>
            <tr>
                <td><strong><a href="?@QueryStringConverter.OrderHelper(sessionState, "Name")">@Localizer["Name"]</a></strong></td>
                <td><strong><a href="?@QueryStringConverter.OrderHelper(sessionState, "Pages")">@Localizer["Pages"]</a></strong></td>
            </tr>
        </thead>

        @foreach (var p in Model.Namespaces)
        {
            <tr>
                <td><a href="@GlobalConfiguration.BasePath/Admin/Namespace/@(p.Namespace?? string.Empty)">@(string.IsNullOrEmpty(p.Namespace) ? "(Default)" : p.Namespace)</a></td>
                <td>@p.CountOfPages.ToString("N0")</td>
            </tr>
        }
    </table>

    @Html.Raw(TightWiki.Library.PageSelectorGenerator.Generate(Context.Request.QueryString, Model.PaginationPageCount))
}
else
{
    <div class="d-flex small text-muted mb-0">
        <strong>
            @Localizer["There are currently no pages which exist within namespaces."]
        </strong>
    </div>
}
